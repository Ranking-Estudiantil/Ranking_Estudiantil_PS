// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ranking_Estudiantil.Data;

#nullable disable

namespace Ranking_Estudiantil.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221114222206_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ranking_Estudiantil.Models.AcademicUnity", b =>
                {
                    b.Property<int>("AcademicUnityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicUnityID"), 1L, 1);

                    b.Property<string>("AcademicUnityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("AcademicUnityID");

                    b.ToTable("AcademicUnity", (string)null);
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Career", b =>
                {
                    b.Property<int>("CareerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CareerID"), 1L, 1);

                    b.Property<string>("CareerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("CareerID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Career", (string)null);
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"), 1L, 1);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FacultyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("DepartmentID");

                    b.HasIndex("FacultyID");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyID"), 1L, 1);

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("FacultyID");

                    b.ToTable("Faculty", (string)null);
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"), 1L, 1);

                    b.Property<int>("AcademicUnityID")
                        .HasColumnType("int");

                    b.Property<int>("CareerID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.HasIndex("AcademicUnityID");

                    b.HasIndex("CareerID");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Professor", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.HasKey("PersonID");

                    b.ToTable("Professor", (string)null);
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Projects", b =>
                {
                    b.Property<int>("ProjectsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectsID"), 1L, 1);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StudentPersonID")
                        .HasColumnType("int");

                    b.Property<int>("StudentsID")
                        .HasColumnType("int");

                    b.Property<string>("achievment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("punctuation")
                        .HasColumnType("float");

                    b.HasKey("ProjectsID");

                    b.HasIndex("StudentPersonID");

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Sanctions", b =>
                {
                    b.Property<int>("SanctionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SanctionsID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("StudentPersonID")
                        .HasColumnType("int");

                    b.Property<int>("StudentsID")
                        .HasColumnType("int");

                    b.Property<double>("punctuation")
                        .HasColumnType("float");

                    b.HasKey("SanctionsID");

                    b.HasIndex("StudentPersonID");

                    b.ToTable("Sanctions", (string)null);
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Student", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<byte>("Rank")
                        .HasColumnType("tinyint");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("PersonID");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Career", b =>
                {
                    b.HasOne("Ranking_Estudiantil.Models.Department", "Department")
                        .WithMany("Careers")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Department", b =>
                {
                    b.HasOne("Ranking_Estudiantil.Models.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Person", b =>
                {
                    b.HasOne("Ranking_Estudiantil.Models.AcademicUnity", "academicUnity")
                        .WithMany("People")
                        .HasForeignKey("AcademicUnityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ranking_Estudiantil.Models.Career", "career")
                        .WithMany("People")
                        .HasForeignKey("CareerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("academicUnity");

                    b.Navigation("career");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Professor", b =>
                {
                    b.HasOne("Ranking_Estudiantil.Models.Person", "Person")
                        .WithOne("professor")
                        .HasForeignKey("Ranking_Estudiantil.Models.Professor", "PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Projects", b =>
                {
                    b.HasOne("Ranking_Estudiantil.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentPersonID");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Sanctions", b =>
                {
                    b.HasOne("Ranking_Estudiantil.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentPersonID");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Student", b =>
                {
                    b.HasOne("Ranking_Estudiantil.Models.Person", "PeronStud")
                        .WithOne("student")
                        .HasForeignKey("Ranking_Estudiantil.Models.Student", "PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeronStud");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.AcademicUnity", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Career", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Department", b =>
                {
                    b.Navigation("Careers");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Faculty", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Ranking_Estudiantil.Models.Person", b =>
                {
                    b.Navigation("professor");

                    b.Navigation("student");
                });
#pragma warning restore 612, 618
        }
    }
}
